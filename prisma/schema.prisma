 generator client {
    provider = "prisma-client-js"
    output   = "../src/generated/prisma"
  }

  datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
  }

  model User {
    id            String    @id @default(cuid())
    name          String?
    email         String    @unique
    password      String?
    emailVerified DateTime?
    image         String?
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt

    accounts      Account[]
    sessions      Session[]
    streamSessions StreamSession[]
  }

  model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    createdAt         DateTime @default(now())
    updatedAt         DateTime @updatedAt

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)      

    @@unique([provider, providerAccountId])
  }

  model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)      
  }

  model StreamSession {
    id        String   @id @default(cuid())
    uid       String   @unique
    userId    String
    title     String?
    status    StreamStatus @default(INACTIVE)
    quality   StreamQuality @default(MEDIUM)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    endedAt   DateTime?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)      
  }

  enum StreamStatus {
    INACTIVE
    STARTING
    ACTIVE
    STOPPING
  }

  enum StreamQuality {
    LOW
    MEDIUM
    HIGH
    ULTRA
  }